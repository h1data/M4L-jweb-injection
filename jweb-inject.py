### utility for jweb object in Cycling' 74 Max

import sys
import argparse
import fileinput

def generate_injection(input_file : str, output_file : str) -> int:
    """Generate an JavaScript to inject scripts into jweb
    
    Args:
        input_file: the file name of HTML template
        output_file: the file name of injection JavaScript
    """

    """ """
    SCRIPT_HEADER = (
        '// generated by %s\n' % sys.argv[0],
        '// based on %s\n\n' % input_file,
        'autowatch = 1;\n',
        'inlets = 1;\n',
        'outlets = 1;\n'
        )
    """ """
    SCRIPT_FOOTER = (
        '\n',
        'function inject() {\n',
        "  outlet(0, 'executejavascript', SCRIPT);\n",
        '}\n'
        )
    LINE_HEADER_FIRST = 'var SCRIPT = "'
    LINE_HEADER = 'SCRIPT = SCRIPT + "'
    LINE_FOOTER = '\\n";\n'

    with fileinput.input(files=(input_file)) as file:
        is_write = False
        is_first = True
        for line in file:
            line = line.replace('\\', '\\\\')
            if '@@@SOS@@@' in line:
                is_write = True
                output = open(output_file, mode = 'w', encoding='UTF-8')
                output.writelines(SCRIPT_HEADER)
                continue
            elif '@@@EOS@@@' in line:
                output.writelines(SCRIPT_FOOTER)
                print('Generated injection JavaScript: %s' % output_file)
                break
            if is_write and is_first:
                # the first line of scripts
                output.write(LINE_HEADER_FIRST + line.strip() + LINE_FOOTER)
                is_first = False
            elif is_write:
                output.write(LINE_HEADER + line.strip() + LINE_FOOTER)
        if is_write:
            output.close
    return -1

def main() -> int:
    """Main function """
    parser = argparse.ArgumentParser(prog=sys.argv[0], description='')

    parser.add_argument('-i', '---input', nargs='?', metavar='input-file', help='the HTML template file', default='jweb-template.html', type=str)
    parser.add_argument('-o', '---output', nargs='?', metavar='output-file', help='the name of the JavaScript file', default='jweb-inject.js', type=str)

    args = parser.parse_args()
    
    if args.output:
        generate_injection(args.input, args.output)
    else:
        parser.print_usage()

if __name__ == '__main__':
    sys.exit(main())
